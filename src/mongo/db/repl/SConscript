# -*- mode: python -*-

Import("env")

env.Library('repl_settings',
            'repl_settings.cpp',
            LIBDEPS=[
                '$BUILD_DIR/mongo/base/base',
                '$BUILD_DIR/mongo/server_parameters'
            ])

env.Library('rslog',
            'rslog.cpp',
            LIBDEPS=[
                '$BUILD_DIR/mongo/logger/logger',
            ])

env.Library(
    target='network_interface_impl',
    source=[
        'network_interface_impl.cpp',
        'network_interface_impl_downconvert_find_getmore.cpp',
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/base/base',
        '$BUILD_DIR/mongo/bson',
        '$BUILD_DIR/mongo/client/clientdriver',
        '$BUILD_DIR/mongo/coredb',
        '$BUILD_DIR/mongo/db/common',
        '$BUILD_DIR/mongo/db/query/getmore_request',
        '$BUILD_DIR/mongo/db/query/lite_parsed_query',
        ])

env.Library('replication_executor',
            [
                'replication_executor.cpp',
                'scatter_gather_algorithm.cpp',
                'scatter_gather_runner.cpp',
            ],
            LIBDEPS=['$BUILD_DIR/mongo/foundation',
                     '$BUILD_DIR/mongo/hostandport'])

env.Library(
    target='network_interface_asio',
    source=[
        'network_interface_asio.cpp'
    ],
    LIBDEPS=[
        '$BUILD_DIR/mongo/network',
        'replication_executor'
    ])

env.CppUnitTest(
    target='network_interface_asio_test',
    source= [
        'network_interface_asio_test.cpp',
    ],
    LIBDEPS=[
        'network_interface_asio',
        '$BUILD_DIR/mongo/client/dbmessage'
    ])

env.Library(
    target='replication_executor_test_fixture',
    source=[
        'replication_executor_test_fixture.cpp',
    ],
    LIBDEPS=[
        'replication_executor',
        'replmocks',
    ],
)

env.CppUnitTest(
    target='replication_executor_test',
    source=[
        'replication_executor_test.cpp',
    ],
    LIBDEPS=[
        'replication_executor_test_fixture',
    ],
)

env.Library('topology_coordinator',
            [
                'heartbeat_response_action.cpp',
                'topology_coordinator.cpp',
            ],
            LIBDEPS=[
                'repl_coordinator_interface',
            ])

env.Library('topology_coordinator_impl',
            [
                'member_heartbeat_data.cpp',
                'topology_coordinator_impl.cpp',
            ],
            LIBDEPS=[
                'replication_executor',
                'repl_settings',
                'rslog',
                'topology_coordinator',
            ])

env.CppUnitTest('repl_set_heartbeat_response_test',
                'repl_set_heartbeat_response_test.cpp',
                LIBDEPS=['replica_set_messages'])

env.CppUnitTest('topology_coordinator_impl_test',
                'topology_coordinator_impl_test.cpp',
                LIBDEPS=['topology_coordinator_impl',
                         'replica_set_messages'])

env.Library('repl_coordinator_impl',
            [
                'check_quorum_for_config_change.cpp',
                'elect_cmd_runner.cpp',
                'freshness_checker.cpp',
                'repl_client_info.cpp',
                'replica_set_config_checks.cpp',
                'replication_coordinator_impl.cpp',
                'replication_coordinator_impl_elect.cpp',
                'replication_coordinator_impl_heartbeat.cpp',
            ],
            LIBDEPS=[
                     '$BUILD_DIR/mongo/db/common',
                     '$BUILD_DIR/mongo/db/index/index_descriptor',
                     '$BUILD_DIR/mongo/fail_point',
                     '$BUILD_DIR/mongo/global_timestamp',
                     '$BUILD_DIR/mongo/server_options_core',
                     '$BUILD_DIR/mongo/service_context',
                     '$BUILD_DIR/mongo/util/net/command_status',
                     'repl_coordinator_interface',
                     'replica_set_messages',
                     'replication_executor',
                     'rslog',
                     'topology_coordinator',
                 ])

env.Library('repl_coordinator_test_fixture',
            [
                'replication_coordinator_test_fixture.cpp',
            ],
            LIBDEPS=[
                'repl_coordinator_impl',
                'replmocks',
                'topology_coordinator_impl',
            ])

env.CppUnitTest('repl_coordinator_impl_test',
                [
                    'replication_coordinator_impl_test.cpp',
                ],
                LIBDEPS=['repl_coordinator_test_fixture'])

env.CppUnitTest('replica_set_config_checks_test',
                'replica_set_config_checks_test.cpp',
                LIBDEPS=[
                    'repl_coordinator_impl',
                    'replmocks'
                ])

env.CppUnitTest('scatter_gather_test',
                'scatter_gather_test.cpp',
                LIBDEPS=['repl_coordinator_impl',
                         'replmocks'])

env.CppUnitTest('check_quorum_for_config_change_test',
                'check_quorum_for_config_change_test.cpp',
                LIBDEPS=[
                    'repl_coordinator_impl',
                    'replication_executor',
                    'replmocks',
                ])

env.CppUnitTest('freshness_checker_test',
                'freshness_checker_test.cpp',
                LIBDEPS=['repl_coordinator_impl',
                         'replica_set_messages',
                         'replmocks'])

env.CppUnitTest('elect_cmd_runner_test',
                'elect_cmd_runner_test.cpp',
                LIBDEPS=['repl_coordinator_impl',
                         'replica_set_messages',
                         'replmocks'])

env.CppUnitTest('repl_coordinator_impl_elect_test',
                'replication_coordinator_impl_elect_test.cpp',
                LIBDEPS=['repl_coordinator_test_fixture'])

env.CppUnitTest('repl_coordinator_impl_heartbeat_test',
                'replication_coordinator_impl_heartbeat_test.cpp',
                LIBDEPS=['repl_coordinator_test_fixture'])

env.CppUnitTest('repl_coordinator_impl_reconfig_test',
                'replication_coordinator_impl_reconfig_test.cpp',
                LIBDEPS=['repl_coordinator_test_fixture'])

env.Library('repl_coordinator_interface',
            ['replication_coordinator.cpp',
             'replication_coordinator_external_state.cpp'],
            LIBDEPS=[
                '$BUILD_DIR/mongo/hostandport',
            ])

env.Library('repl_coordinator_global',
            'replication_coordinator_global.cpp',
            LIBDEPS=['repl_coordinator_interface'])

env.Library('replmocks',
            [
                'network_interface_mock.cpp',
                'operation_context_repl_mock.cpp',
                'replication_coordinator_external_state_mock.cpp',
                'replication_coordinator_mock.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/db/concurrency/lock_manager',
                'repl_coordinator_interface',
                'replica_set_messages',
                'replication_executor',
            ])

env.Library('replica_set_messages',
            [
                'handshake_args.cpp',
                'is_master_response.cpp',
                'member_config.cpp',
                'repl_set_heartbeat_args.cpp',
                'repl_set_heartbeat_response.cpp',
                'replica_set_config.cpp',
                'replica_set_tag.cpp',
                'update_position_args.cpp',
            ],
            LIBDEPS=[
                '$BUILD_DIR/mongo/bson',
                '$BUILD_DIR/mongo/hostandport',
                '$BUILD_DIR/mongo/db/common',
            ])

env.CppUnitTest('replica_set_config_test',
                [
                    'member_config_test.cpp',
                    'replica_set_config_test.cpp',
                    'replica_set_tag_test.cpp',
                ],
                LIBDEPS=['replica_set_messages'])

env.CppUnitTest('isself_test',
                [
                    'isself_test.cpp',
                ],
                LIBDEPS=[
                    '$BUILD_DIR/mongo/serveronly',
                    '$BUILD_DIR/mongo/coreserver',
                    '$BUILD_DIR/mongo/coredb',
                    "$BUILD_DIR/mongo/ntservice_mock",
                ],
                NO_CRUTCH = True)

env.Library(
    target='fetcher',
    source=[
        'fetcher.cpp',
    ],
    LIBDEPS=[
        'replication_executor',
        '$BUILD_DIR/mongo/logger/logger',
        '$BUILD_DIR/mongo/namespace_string',
        '$BUILD_DIR/mongo/util/net/command_status',
    ],
)

env.CppUnitTest(
    target='fetcher_test',
    source='fetcher_test.cpp',
    LIBDEPS=[
        'fetcher',
        'replication_executor_test_fixture',
    ],
)

env.Library(
    target='collection_cloner',
    source=[
        'collection_cloner.cpp',
    ],
    LIBDEPS=[
        'fetcher',
        'replication_executor',
        '$BUILD_DIR/mongo/db/catalog/collection_options',
        '$BUILD_DIR/mongo/logger/logger',
    ],
)

env.CppUnitTest(
    target='collection_cloner_test',
    source='collection_cloner_test.cpp',
    LIBDEPS=[
        'collection_cloner',
        'replication_executor_test_fixture',
    ],
)
